
DataFrame.plot(x=None, y=None, kind='line', ax=None, subplots=False, sharex=None, sharey=False, layout=None,figsize=None, use_index=True, title=None, grid=None, legend=True, style=None, logx=False, logy=False,loglog=False, xticks=None, yticks=None, xlim=None, ylim=None, rot=None, fontsize=None, colormap=None,table=False, yerr=None, xerr=None, secondary_y=False, sort_columns=False, **kwds)

Parameters:

data : DataFrame

x : label or position, default None#指数据框列的标签或位置参数

y : label or position, default None

    Allows plotting of one column versus another

kind : str

        ‘line’ : line plot (default)#折线图
        ‘bar’ : vertical bar plot#条形图
        ‘barh’ : horizontal bar plot#横向条形图
        ‘hist’ : histogram#柱状图
        ‘box’ : boxplot#箱线图
        ‘kde’ : Kernel Density Estimation plot#Kernel 的密度估计图，主要对柱状图添加Kernel 概率密度线
        ‘density’ : same as ‘kde’
        ‘area’ : area plot#不了解此图
        ‘pie’ : pie plot#饼图
        ‘scatter’ : scatter plot#散点图
        ‘hexbin’ : hexbin plot#不了解此图

ax : matplotlib axes object, default None#一个图片切成不同片段，子图对象

subplots : boolean, default False#判断图片中是否有子图

    Make separate subplots for each column

sharex : boolean, default True if ax is None else False#如果有子图，子图共x轴刻度，标签

    In case subplots=True, share x axis and set some x axis labels to invisible; defaults to True if ax is None otherwise False if an ax is passed in; Be aware, that passing in both an ax and sharex=True will alter all x axis labels for all axis in a figure!

sharey : boolean, default False#如果有子图，子图共y轴刻度，标签

    In case subplots=True, share y axis and set some y axis labels to invisible

layout : tuple (optional)#子图的行列布局

    (rows, columns) for the layout of subplots

figsize : a tuple (width, height) in inches#图片尺寸大小

use_index : boolean, default True#默认用索引做x轴

    Use index as ticks for x axis

title : string#图片的标题用字符串

    Title to use for the plot

grid : boolean, default None (matlab style default)#图片是否有网格

    Axis grid lines

legend : False/True/’reverse’#子图的图例

    Place legend on axis subplots

style : list or dict#对每列折线图设置线的类型

    matplotlib line style per column

logx : boolean, default False#设置x轴刻度是否取对数

    Use log scaling on x axis

logy : boolean, default False

    Use log scaling on y axis

loglog : boolean, default False#同时设置x，y轴刻度是否取对数

    Use log scaling on both x and y axes

xticks : sequence#设置x轴刻度值，序列形式（比如列表）

    Values to use for the xticks

yticks : sequence#设置y轴刻度，序列形式（比如列表）

    Values to use for the yticks

xlim : 2-tuple/list#设置坐标轴的范围，列表或元组形式

ylim : 2-tuple/list

rot : int, default None#设置轴标签（轴刻度）的显示旋转度数

    Rotation for ticks (xticks for vertical, yticks for horizontal plots)

fontsize : int, default None#设置轴刻度的字体大小

    Font size for xticks and yticks

colormap : str or matplotlib colormap object, default None#设置图的区域颜色

    Colormap to select colors from. If string, load colormap with that name from matplotlib.

colorbar : boolean, optional

    If True, plot colorbar (only relevant for ‘scatter’ and ‘hexbin’ plots)

position : float

    Specify relative alignments for bar plot layout. From 0 (left/bottom-end) to 1 (right/top-end). Default is 0.5 (center)

layout : tuple (optional)

    (rows, columns) for the layout of the plot

table : boolean, Series or DataFrame, default False

    If True, draw a table using the data in the DataFrame and the data will be transposed to meet matplotlib’s default layout. If a Series or DataFrame is passed, use passed data to draw a table.

yerr : DataFrame, Series, array-like, dict and str

    See Plotting with Error Bars for detail.

xerr : same types as yerr.

stacked : boolean, default False in line and

    bar plots, and True in area plot. If True, create stacked plot.

sort_columns : boolean, default False

    Sort column names to determine plot ordering

secondary_y : boolean or sequence, default False

    Whether to plot on the secondary y-axis If a list/tuple, which columns to plot on secondary y-axis

mark_right : boolean, default True

    When using a secondary_y axis, automatically mark the column labels with “(right)” in the legend

kwds : keywords

    Options to pass to matplotlib plotting method

Returns:axes : matplotlib.AxesSubplot or np.array of them



matplotlib 柱状图、饼图；直方图、盒图

#-*- coding: utf-8 -*-

import matplotlib.pyplot as plt
import numpy as np
import matplotlib as mpl

mpl.rcParams['font.family']='sans-serif'
mpl.rcParams['font.sans-serif']=[u'SimHei']

data=np.random.randint(1,11,3)
x=np.arange(len(data))

############

# 柱状图 bar/barh
rects1=plt.bar(                      #(x,data) 就是所要画的二维数据
        left=x,                      #x 是X坐标轴数据，即每个块的x轴起始位置
        height=data,                 #data是Y坐标轴的数据，即每个块的y轴高度
        width=[0.1,0.2,0.3],         #每一个块的显示宽度
        bottom=[1,2,3],              #每一个块的底部高度
        color='y',                   #块的颜色
        edgecolor='g',               #块的边界颜色
        linewidth=2,                 #块的线条宽度
        xerr=1,                      #x轴误差bar
        yerr=1,                      #y轴误差bar
        ecolor='r',                  #误差bar的颜色
        capsize=1,                   #误差bar的线条宽度
        orientation='vertical',     #块的方向  (horizontal,vertical)
        align="center",              #块的位置 (center, left, right)
        hold=None
        )

plt.show()


#######################
# 饼状图 pie

plot2=plt.pie(data,                          # 每个饼块的实际数据，如果大于1，会进行归一化，计算percentage
        explode=[0.0,0.1,0.2],               # 每个饼块离中心的距离
        colors=['y','r','g'],               # 每个饼块的颜色
        labels=['women','men','unknown'], # 每个饼块的标签
        labeldistance=1.2,                   # 每个饼块标签到中心的距离
        autopct='%1.1f%%',                  # 百分比的显示格式
        pctdistance=0.4,                     # 百分比到中心的距离
        shadow=True,                         # 每个饼块是否显示阴影
        startangle=0,                        # 默认从x轴正半轴逆时针起
        radius=1.0                           # 饼块的半径
        )
# pl.legend([plot1, plot2], (’red line’, ’green circles’), ’best’, numpoints=1)     # make legend
plt.show()

#############################
## 直方图 hist, 盒图boxplot
data=np.random.randn(100)
print(data)

fig,(ax1,ax2)=plt.subplots(1,2,figsize=(8,4))
ax1.hist(data)                      #
ax2.boxplot(data)

plt.show()
